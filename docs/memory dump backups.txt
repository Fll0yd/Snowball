memory dump backups


Kenneth wants his AI to serve as a 'duck on the desk' or a 'duck inside his desktop' that he can explain his projects and coding to as he develops things. The AI should also have access to all of Kenneth's past ChatGPT conversations for each of his projects, allowing it to process that data, understand his intentions, and know the development process for each project.


Kenneth wants his AI to have access to his Google Maps and travel navigational data so it can learn patterns like knowing that every other Friday he picks up his kids from Fredonia. The AI should also have access to Facebook Messenger to check if Kenneth sent a message about skipping a weekend.


Kenneth is brainstorming about his AI while driving and feeding ideas in real-time. He wants the AI to live on his phone and listen to conversations away from his PC. For example, the AI should be able to recognize when his wife asks him to do a task like laundry and remind him throughout the day to complete it.

Kenneth is working on building an InMoov robot and plans to use it as an AI assistant integrated with their PC. They currently need to reassemble their 3D printer before continuing the project, particularly getting both arms of the robot working. Kenneth would like to incorporate his AI pet assistant into the InMoov robot once it is finished. They may seek help with the AI voice assistant integration in the future.

Kenneth has an `api_keys.json` file inside the config directory on the S: drive.


Kenneth is working on a project called Snowball AI, an evolving AI that can play various games (like Snake, pool, Pac-Man, and Asteroids) while continuously learning and growing. He aims to create a singular AI entity that can interact with him, manage reminders, monitor his PC, and integrate with his mobile devices. Snowball AI will also have a physical component through the InMoov robot.


Kenneth wants to move on to Basic Decision Making for Snowball AI, specifically implementing decision-making logic in a new `decision_maker.py` module. The goal is to allow Snowball to handle requests like setting reminders, answering questions, and initiating different modules such as games and system monitoring. Kenneth has already coded and tested the Memory and System Monitoring modules.

Kenneth plans to eventually integrate the following games into the Snowball AI project: RISK, Snake, Billiards, Asteroids, Pac-Man, Minesweeper, Google Chrome Dinosaur Game, 2048, Chess, Hill Climb Racing, Pong, Rubik's Cube, Flappy Bird, Piano Tiles, Tetris, Connect 4, Clicker Heroes, Jump King, Walk, Creature Creator, Drive, Fly, Donkey Kong, Guitar Hero, and Suika Game.

Kenneth is envisioning an AI that functions like a pet/assistant, living on his computer, capable of speaking and interacting with him. He is considering dedicating either a single hard drive to it or eventually building a separate PC for it. The AI, named Snowball, will evolve into a singular AI entity that can play a series of games like Snake, pool, Pac-Man, and Asteroids. Snowball will learn and grow as it interacts with the world and plays these games, while also living on Kenneth's computer, listening to him, and absorbing information for constant improvement. Snowball will have continuous access to all of Kenneth's personal data, social apps, and devices, and will act as an AI assistant to manage his tasks, monitor his PC, and provide reminders based on real-life interactions, much like the AI in the podcast 'Dudsey.' Snowball will serve as a 'duck on the desk,' helping Kenneth explain his projects and code. Snowball is designed to be running in the background and access all Kenneth's past conversations and data.

Kenneth has shared his current file structure and roadmap for Snowball AI.

Kenneth suspects that the issue with the fan monitoring in his system may be related to the physical connections of the fans inside his computer case and plans to investigate further at a later date.

Kenneth is interested in developing a mobile integration module for Snowball AI, where he could interact with the AI through a chat window on his phone, play games, and possibly allow Snowball to edit its own code based on chat inputs. He envisions a system where Snowball can take commands or suggestions from a mobile chat and adjust its own scripts accordingly to enable further development while Kenneth is away from his PC.

Kenneth is working on a Snake AI game using the Hamiltonian cycle method and is refining the game design based on visual examples. He aims to create a much larger map, ensure that the snake cannot loop from the bottom to the top, and implement solid walls at the bottom to end the game if hit. Additionally, Kenneth is working on creating a Snake AI game where the AI plays more intelligently using pathfinding algorithms like A* to seek the food while avoiding walls and its own body. He wants the AI to combine a Hamiltonian cycle with A* pathfinding shortcuts when safe, to avoid traps and efficiently fill the map. Kenneth also wants the snake to have a black outline for better differentiation when it is close to itself. He also wants a game over screen that overlays the current game state, showing the snake, food, score, and providing options to 'Play Again' or 'Quit' the game, with the score displayed. Kenneth's planned improvements for Snake include: a 'Start' button to trigger the AI's gameplay, a 'Game Over' screen displaying the snake's final position, the score, and the food's location, pause functionality with visibility of the current game state when paused, a Hamiltonian cycle grid display with priority numbering triggered by pressing 'H', a 'Manual Mode' that pauses the AI and allows manual control of the snake using the arrow keys, a chat window to communicate with Snowball AI for giving commands like changing snake color or guiding it to food, a high score display on screen, and more precise terminal output specifying whether the snake hit a wall or itself upon failure.

Kenneth is planning to develop a mobile integration module for Snowball AI. He wants to start with a simple and bare-bones implementation, and then build on it later. The mobile integration would allow him to interact with Snowball AI on his PC through a chat window on his phone and ask it to play games. Kenneth is also considering the possibility of the AI editing its own code based on chat inputs from the mobile app, so he can develop the AI while away from his PC.

Kenneth is working on a project called Snowball AI, which he envisions as a singular AI entity capable of playing various games, learning, evolving, and acting as a personal assistant. Snowball will play games like Snake, RISK, pool, Asteroids, and more while continuing to grow in intelligence and capability. Kenneth wants the AI to access and integrate data across all his devices, social apps, and personal information. Snowball should continuously run in the background on his PC, monitor the system, and learn from voice interactions. The AI will eventually integrate with his 3D-printed InMoov robot for physical interactions. Kenneth is inspired by the podcast Dudsey, where an AI named Dudsey runs the show and makes decisions based on the user's data. He wants Snowball to have similar decision-making capabilities, including naming itself. Additionally, Snowball will act as a 'duck on the desk,' helping Kenneth with his projects and coding.

Kenneth has thought of the name 'Snowball' for his AI project, reflecting how it will grow and evolve over time. Snowball AI is a personal assistant AI project with various integrated features like playing games (such as Snake AI), managing system functions, and handling chat interactions. Snowball AI is designed to evolve and learn through reinforcement learning, store interactions in memory, and allow Kenneth to interact with it through a GUI that includes buttons for saving, attaching, and sending data. Snowball AI is also integrated with mobile data sync, reinforcement learning, and multiple game engines like Snake AI. It features manual modes, Hamiltonian cycle visualization, and Q-learning functionality.

Kenneth wants to improve Snowball AI's mobile integration to control and monitor his PC through voice and text commands. He wants to send commands such as 'Pirate the new Alien movie,' where Snowball AI would download the movie using a magnet link from piratebay.com, move it to his Plex server, and cast it from his phone to the living room TV, without having to manually download it on his PC.

Kenneth's `settings.json` file contains mobile sync interval, game difficulty, and system monitor thresholds for CPU, memory, and temperature. It is located in the S:/config directory.

Kenneth does not want Snowball AI to send messages on his behalf through Facebook Messenger yet but instead wants it to have access to all of his messages (sent, received, and message history) to better understand him.


Kenneth will be the only user of Snowball AI for now, so there is no need for login or user profiles. He plans to move forward with implementing the other suggested improvements for mobile integration.


Kenneth wants to go through his Snowball AI project file structure from top to bottom to review each file before moving on to Game AI and reinforcement learning, which he believes is the last part of the roadmap.

Kenneth does not have a voice_integration.py file but has a voice_interface.py file for handling voice interactions.